using System;
using System.Collections.Generic;

namespace CSLight
{
    class Program
    {
        static void Main(string[] args)
        {
            Deck deck = new Deck();
            Player player = new Player();

            const string CommandTakeCard = "1";
            const string CommandShowCards = "2";
            const string CommandExit = "3";

            string userInput;

            bool isWork = true;

            while (isWork)
            {
                Console.Clear();
                Console.WriteLine($"{CommandTakeCard} - взять карту.");
                Console.WriteLine($"{CommandShowCards} - показать карты игрока.");
                Console.WriteLine($"{CommandExit} - выйсти из программы.\n");
                Console.Write("Введите команду:\n>");
                userInput = Console.ReadLine();
                switch (userInput)
                {
                    case CommandTakeCard:
                        player.AddCard(deck.GiveAwayCard());
                        break;

                    case CommandShowCards:
                        player.ShowCards();
                        break;

                    case CommandExit:
                        isWork = false;
                        break;

                    default:
                        Console.WriteLine("\nВведена неверная команда.\nДля продолжения нажмите любую клавишу...");
                        Console.ReadKey();
                        break;
                }
            }
        }
    }

    public class Player
    {
        private readonly Deck _deck = new Deck();
        private List<Card> _cards = new List<Card>();

        public void AddCard(Card card)
        {
            if (_deck.GiveAwayCard() != null)
            {
                _cards.Add(card);
            }
            else
            {
                Console.WriteLine("карты в колоде закончились");
                Console.ReadKey();
            }
        }

        public void ShowCards()
        {
            Console.WriteLine("На руках у игрока:\n");
            
            for (int i = 0; i < _cards.Count; i++)
            {
                _cards[i].ShowStats();
            }

            Console.WriteLine("\nДля продолжения нажмите любую клавишу...");
            Console.ReadKey();
        }
    }

    public class Deck
    {
        private List<Card> _cards;

        public Deck()
        {
            CreatCards();
            ShuffleCards();
        }

        public Card GiveAwayCard()
        {
            if (_cards.Count > 0)
            {
                Card card = _cards[0];
                _cards.Remove(card);

                return card;
            }
            else
            {
                return null;
            }            
        }

        private void CreatCards()
        {
            int cardSuitCount = Enum.GetNames(typeof(CardSuit)).Length;
            int cardValueCount = Enum.GetNames(typeof(CardValue)).Length;
            _cards = new List<Card>(cardSuitCount * cardValueCount);

            for (int i = 0; i < cardSuitCount; i++)
                for (int j = 0; j < cardValueCount; j++)
                    _cards.Add(new Card((CardSuit)i, (CardValue)j));
        }

        private void ShuffleCards()
        {
            Random random = new Random();

            for (int i = 0; i < _cards.Count; i++)
            {
                int index = random.Next(_cards.Count);
                (_cards[i], _cards[index]) = (_cards[index], _cards[i]);
            }
        }
    }

    public class Card
    {
        public Card(CardSuit suit, CardValue value)
        {
            Suit = suit;
            Value = value;
        }

        public CardSuit Suit { get; private set; }
        public CardValue Value { get; private set; }

        public void ShowStats()
        {
            Console.WriteLine($"{Value} {Suit}");
        }
    }

    public enum CardSuit
    {
        Spades,
        Clubs,
        Hearts,
        Diamonds
    }

    public enum CardValue
    {
        Six,
        Seven,
        Eight,
        Nine,
        Ten,
        Jack,
        Lady,
        King,
        Ace
    }
}
