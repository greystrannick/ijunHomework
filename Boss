using System;

namespace CSLight
{
    class Program
    {
        static void Main(string[] args)
        {
            const string CommandInfoPlayer = "1";
            const string CommandInfoBoss = "2";
            const string CommandBattle = "3";
            const string CommandBaseSpell = "1";
            const string CommandImprovedSpell = "2";
            const string CommandLegendarySpell = "3";
            const string CommandHealingSpell = "5";
            const string CommandEscape = "4";

            bool isGameRunning = true;
            bool isActiveImprovedSpell = false;
            bool isActiveLegendarySpell = false;
            string mainMenuCommand;
            int bossHealth = 4000;
            int playerHealth = 1500;
            int damageBaseSpell = 300;
            int damageImprovedSpell = 600;
            int damageLegendarySpell = 900;
            int damageHealingSpell = 300;
            int damageHealingBoss = 100;
            int randomAttackDemonMin = 300;
            int randomAttackDemonMax = 600;
            string BaseSpell = "Огненный шар";
            string ImprovedSpell = "Буйство вулкана";
            string LegendarySpell = "Испепеляющий Хвост Кометы";
            string HealingSpell = "Целительные ладони";
            string EscapeSpell = "Крылья ветра";
            string playerSpellsList = $"{CommandBaseSpell} - {BaseSpell}, базовое заклинание, наносит {damageBaseSpell} урона.\n" +
                $"{CommandImprovedSpell} - {ImprovedSpell}, огненная смерть выплескивается в форме огромного вулкана, наносит {damageImprovedSpell} урона. Можно применить только после Огненного шара.\n" +
                $"{CommandLegendarySpell} - {LegendarySpell}, маг создаёт у себя в руке легендарный клинок, целиком состоящий из сжатого первородного пламени, наносит {damageLegendarySpell} урона. Можно применить только после Буйства вулкана.\n" +
                $"{CommandEscape} - {EscapeSpell}, позволяют мгновенно покинуть враждебную локацию.\n" +
                $"{CommandHealingSpell} - {HealingSpell}, маг прикладывает руку к ранению, вкладывая в прикосновение часть волшебной энергии жизни, восстанавливает {damageHealingSpell} очков жизни.";
            string demonSpell = $"Босс ВбаЭксел, могучий демон подземелий.\n" +
                $"Наносит атаку в размере: от {randomAttackDemonMin} до {randomAttackDemonMax} урона.\n" +
                $"Вы в любое время можете сохранить свою нежную шкурку путем бегства.";
            Random random = new Random();

            while (isGameRunning)
            {
                Console.SetCursorPosition(0, 0);
                Console.WriteLine($"Главное меню:\n{CommandInfoPlayer}.Посмотреть умения игрока.\n{CommandInfoBoss}.Посмотреть умения Босса.\n{CommandBattle}.Начать битву с Боссом.\n{CommandEscape}.Убежать позорно с поля боя.\n");
                Console.SetCursorPosition(0, 18);
                Console.Write("---------------\n> ");
                mainMenuCommand = Console.ReadLine();

                switch (mainMenuCommand)
                {
                    case CommandInfoPlayer:
                        Console.Clear();
                        Console.SetCursorPosition(0, 6);
                        Console.WriteLine(playerSpellsList);
                        break;

                    case CommandInfoBoss:
                        Console.Clear();
                        Console.SetCursorPosition(0, 6);
                        Console.WriteLine(demonSpell);
                        break;

                    case CommandBattle:
                        string attackSpell;
                        int currentDamageBoss;

                        Console.Clear();
                        Console.SetCursorPosition(0, 0);
                        Console.WriteLine("Да начнется БИТВА и победит в ней сильнейший!!!");

                        while (bossHealth > 0 && playerHealth > 0)
                        {
                            Console.SetCursorPosition(0, 1);
                            Console.WriteLine("Выберите заклинание для атаки.");
                            Console.WriteLine(playerSpellsList);
                            Console.SetCursorPosition(0, 18);
                            Console.Write("---------------\n> ");
                            attackSpell = Console.ReadLine();

                            switch (attackSpell)
                            {
                                case CommandBaseSpell:
                                    currentDamageBoss = random.Next(randomAttackDemonMin, randomAttackDemonMax);
                                    Console.Clear();
                                    Console.SetCursorPosition(0, 12);
                                    bossHealth -= damageBaseSpell;
                                    playerHealth -= currentDamageBoss;
                                    isActiveImprovedSpell = true;
                                    Console.WriteLine($"Игрок наносит Боссу {damageBaseSpell} урона заклинанием {BaseSpell}.\n" +
                                        $"Босс наносит игроку {currentDamageBoss} урона.\n" +
                                        $"Здоровье Босса: {bossHealth}.\n" +
                                        $"Здоровье игрока {playerHealth}.");
                                    break;

                                case CommandImprovedSpell:
                                    if (isActiveImprovedSpell)
                                    {
                                        currentDamageBoss = random.Next(randomAttackDemonMin, randomAttackDemonMax);
                                        bossHealth -= damageImprovedSpell;
                                        playerHealth -= currentDamageBoss;
                                        isActiveLegendarySpell = true;
                                        isActiveImprovedSpell = false;
                                        Console.Clear();
                                        Console.SetCursorPosition(0, 12);
                                        Console.WriteLine($"Игрок наносит Боссу {damageImprovedSpell} урона заклинанием {ImprovedSpell}.\n" +
                                            $"Босс наносит игроку {currentDamageBoss} урона.\n" +
                                            $"Здоровье Босса: {bossHealth}.\n" +
                                            $"Здоровье игрока {playerHealth}.");
                                    }
                                    else
                                    {
                                        Console.Clear();
                                        Console.SetCursorPosition(0, 12);
                                        Console.WriteLine($"Использование заклинания {ImprovedSpell} невозможно.");
                                    }
                                    break;

                                case CommandLegendarySpell:
                                    if (isActiveLegendarySpell)
                                    {
                                        currentDamageBoss = random.Next(randomAttackDemonMin, randomAttackDemonMax);
                                        bossHealth -= damageLegendarySpell;
                                        playerHealth -= currentDamageBoss;
                                        isActiveLegendarySpell = false;
                                        Console.Clear();
                                        Console.SetCursorPosition(0, 12);
                                        Console.WriteLine($"Игрок наносит Боссу {damageLegendarySpell} урона заклинанием {LegendarySpell}.\n" +
                                            $"Босс наносит игроку {currentDamageBoss} урона.\n" +
                                            $"Здоровье Босса: {bossHealth}.\n" +
                                            $"Здоровье игрока {playerHealth}.");
                                    }
                                    else
                                    {
                                        Console.Clear();
                                        Console.SetCursorPosition(0, 12);
                                        Console.WriteLine($"Использование заклинания {LegendarySpell} невозможно.");
                                    }
                                    break;

                                case CommandEscape:
                                    bossHealth = 0;
                                    playerHealth = 0;
                                    Console.Clear();
                                    Console.SetCursorPosition(0, 0);
                                    Console.WriteLine("Беги подлый ТРУС!!!");
                                    break;

                                case CommandHealingSpell:
                                    int playerHealthMax = 1500;
                                    Console.Clear();
                                    Console.SetCursorPosition(0, 12);
                                    bossHealth += damageHealingBoss;
                                    playerHealth += damageHealingSpell;

                                    if (playerHealth >= playerHealthMax)
                                    {
                                        playerHealth = playerHealthMax;
                                        Console.WriteLine("У вас полные жизни.");
                                    }
                                    else
                                    {
                                        Console.WriteLine($"Игрок восстанавливает {damageHealingSpell}очков жизни заклинанием {HealingSpell}.\n" +
                                             $"Босс восстанавливает {damageHealingBoss} очков жизни.\n" +
                                             $"Здоровье Босса: {bossHealth}.\n" +
                                             $"Здоровье игрока {playerHealth}.");
                                    }
                                    break;

                                default:
                                    Console.Clear();
                                    break;
                            }
                        }
                        break;

                    case CommandEscape:
                        Console.Clear();
                        Console.WriteLine("Беги подлый ТРУС!!!");
                        isGameRunning = false;
                        break;

                    default:
                        Console.Clear();
                        break;

                }

                if ((bossHealth == 0 && playerHealth == 0) || playerHealth <= 0 || bossHealth <= 0)
                {
                    isGameRunning = false;
                }
            }

            if (bossHealth == 0 && playerHealth == 0)
            {
                Console.WriteLine("Ничья");
            }
            else if (playerHealth <= 0)
            {
                Console.WriteLine("Вы проиграли");
            }
            else if (bossHealth <= 0)
            {
                Console.WriteLine("Поздравляем, вы победили!");
            }
        }
    }
}
