using System;
using System.Collections.Generic;

namespace CSLight
{
    class Program
    {
        static void Main(string[] args)
        {
            const string CommandAddPlayer = "1";
            const string CommandShowPlayer = "2";
            const string CommandDeletePlayer = "3";
            const string CommandBanPlayer = "4";
            const string CommandUnBanPlayer = "5";
            const string CommandExit = "6";

            bool isRunProgramm = true;

            string userInput;

            Database database = new Database();

            while (isRunProgramm)
            {
                Console.Clear();
                Console.SetCursorPosition(0, 0);
                Console.WriteLine("Выберите пункт меню для работы с базой данных игроков:");
                Console.WriteLine($"{CommandAddPlayer} - добавить новую запись в базу данных игроков.\n" +
                    $"{CommandShowPlayer} - вывести базу данных на всех игроков.\n" +
                    $"{CommandDeletePlayer} - удаление записи об игроке из базы данных.\n" +
                    $"{CommandBanPlayer} - забанить игрока.\n" +
                    $"{CommandUnBanPlayer} - снять бан с игрока.\n" +
                    $"{CommandExit} - выход из программы.\n");
                Console.Write(">");
                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case CommandAddPlayer:
                        database.AddPlayer();
                        break;

                    case CommandShowPlayer:
                        database.ShowAllPlayers();
                        break;

                    case CommandDeletePlayer:
                        database.DeletePlayer();
                        break;

                    case CommandBanPlayer:
                        database.BanPlayer();
                        break;

                    case CommandUnBanPlayer:
                        database.UnBanPlayer();
                        break;

                    case CommandExit:
                        isRunProgramm = false;
                        break;

                    default:
                        Console.WriteLine("Такой команды нет.\nДля продолжения нажмите любую клавишу...");
                        Console.ReadKey();
                        break;
                }
            }
        }
    }

    class Database
    {
        private List<Player> _players = new List<Player>();

        private int _lastId=0;

        public void AddPlayer()
        {
            int idPlayer;

            Console.Write("Введите имя игрока:\n>");
            string namePlayer = Console.ReadLine();

            Console.Write("Введите уровень игрока:\n>");
            int levelPlayer = Convert.ToInt32(Console.ReadLine());

            idPlayer = ++_lastId;

            _players.Add(new Player(idPlayer, namePlayer, levelPlayer));
            Console.WriteLine($"Игрок добавлен в базу данных.");
            Console.WriteLine("Для продолжения нажмите любую клавишу...");
            Console.ReadKey();
        }

        public void DeletePlayer()
        {
            if (TryGetPlayer(out Player player))
            {
                _players.Remove(player);
            }
        }

        public void ShowAllPlayers()
        {
            for (int i = 0; i < _players.Count; i++)
            {
                _players[i].ShowInfo();
            }

            Console.WriteLine("\nДля продолжения нажмите любую клавишу...");
            Console.ReadKey();
        }

        public void BanPlayer()
        {
            if (TryGetPlayer(out Player player))
            {
                if (player.IsBan == false)
                {
                    player.Ban();
                }
                else
                {
                    Console.WriteLine("Игрок уже был забанен!");
                }
            }

            Console.WriteLine("Для продолжения нажмите любую клавишу...");
            Console.ReadKey();
        }

        public void UnBanPlayer()
        {
            if (TryGetPlayer(out Player player))
            {
                if (player.IsBan == true)
                {
                    player.UnBan();
                }
                else
                {
                    Console.WriteLine("Игрок не был забанен!");
                }
            }

            Console.WriteLine("Для продолжения нажмите любую клавишу...");
            Console.ReadKey();
        }

        private bool TryGetPlayer(out Player player)
        {
            player = null;

            ShowAllPlayers();

            Console.Write("Введите идентификатор:\n>");
            string userInput = Console.ReadLine();

            if (int.TryParse(userInput, out int identifier))
            {
                for (int i = 0; i < _players.Count; i++)
                {
                    if (_players[i].Id == identifier)
                    {
                        player = _players[i];
                        return true;
                    }
                }
            }

            return false;
        }
    }

    class Player
    {
        public Player(int id, string name, int level)
        {
            Id = id;
            Name = name;
            Level = level;
            IsBan = false; ;
        }

        public int Id { get; private set; }
        public string Name { get; private set; }
        public int Level { get; private set; }
        public bool IsBan { get; private set; }

        public void Ban()
        {
            if (IsBan == false)
            {
                IsBan = true;
                Console.WriteLine("Игрок забанен");
            }
        }

        public void UnBan()
        {
            if (IsBan == true)
            {
                IsBan = false;
                Console.WriteLine("Игрок разбанен");
            }
        }

        public void ShowInfo()
        {
            Console.WriteLine($"ID: {Id}\t Имя: {Name}\t Уровень: {Level}\t Бан: {IsBan}");
        }
    }
}
