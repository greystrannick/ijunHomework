using System;

namespace CSLight
{
    class Program
    {
        static void Main(string[] args)
        {
            const string CommandAddDossier = "1";
            const string CommandOutputDossiers = "2";
            const string CommandSearchByLastName = "3";
            const string CommandDeleteDossier = "4";
            const string CommandExitDossier = "5";

            string[] fullNames = new string[0];
            string[] positions = new string[0];
            string userInput;
            bool isRunProgramm = true;

            while (isRunProgramm)
            {
                Console.Clear();
                Console.SetCursorPosition(0, 0);
                Console.WriteLine("Выберите пункт меню для работы с досье работников:");
                Console.WriteLine($"{CommandAddDossier} - добавить новую запись в досье.\n" +
                    $"{CommandOutputDossiers} - вывести досье на всех работников.\n" +
                    $"{CommandSearchByLastName} - поиск работника в досье по фамилии.\n" +
                    $"{CommandDeleteDossier} - удаление записи о работнике из досье.\n" +
                    $"{CommandExitDossier} - выход из программы.\n");
                Console.Write(">");
                userInput = Console.ReadLine();

                switch (userInput)
                {
                    case CommandAddDossier:
                        AddDossier(userInput, ref fullNames, ref positions);
                        break;

                    case CommandOutputDossiers:
                        OutputDossiers(fullNames, positions);
                        break;

                    case CommandSearchByLastName:
                        SearchByLastName(userInput, ref fullNames, ref positions);
                        break;

                    case CommandDeleteDossier:
                        DeleteDossier(ref fullNames,ref  positions);
                        break;

                    case CommandExitDossier:
                        isRunProgramm = false;
                        break;

                    default:
                        Console.WriteLine("Такой команды нет.\nДля продолжения нажмите любую клавишу...");
                        Console.ReadKey();
                        break;
                }
            }
        }

        static void AddDossier(string userInput, ref string[] fullNames, ref string[] positions)
        {
            Console.Write("Введите ФИО: ");
            userInput = Console.ReadLine();
            fullNames = IncreasDossier(fullNames, userInput);

            Console.Write("Введите должность: ");
            userInput = Console.ReadLine();
            positions = IncreasDossier(positions, userInput);
        }

        static string[] IncreasDossier(string[] arrayAddition, string addValue)
        {
            string[] temparrayAddition = new string[arrayAddition.Length + 1];

            for (int i = 0; i < arrayAddition.Length; i++)
            {
                temparrayAddition[i] = arrayAddition[i];
            }

            temparrayAddition[temparrayAddition.Length - 1] = addValue;
            arrayAddition = temparrayAddition;
            return arrayAddition;
        }
        static void OutputDossiers(string[] fullNames, string[] positions)
        {
            for (int i = 0; i < fullNames.Length; i++)
            {
                int counter = i + 1;
                Console.Write($"{counter}. {fullNames[i]} - {positions[i]}");
                Console.WriteLine();
            }

            Console.WriteLine("\nДля продолжения нажмите любую клавишу...");
            Console.ReadKey();
        }
        static void SearchByLastName(string userInput, ref string[] fullNames, ref string[] positions)
        {
            bool isSuccessfulSearch = false;

            Console.Write("Введите фaмилию: ");
            userInput = Console.ReadLine();

            for (int i = 0; i < fullNames.Length; i++)
            {
                string[] searchName;
                searchName = fullNames[i].Split();

                if (searchName[0] == userInput)
                {
                    int counter = i + 1;
                    Console.WriteLine($"{counter}. {fullNames[i]} - {positions[i]}");
                    isSuccessfulSearch = true;
                }
            }

            if (isSuccessfulSearch == false)
            {
                Console.WriteLine($"\nВ досье сотрудников с фамилией {userInput} не обнаружено.");
            }

            Console.WriteLine("\nДля продолжения нажмите любую клавишу...");
            Console.ReadKey();
        }
        static void DeleteDossier(ref string[] fullNames,ref  string[] positions)
        {
            Console.Write("Введите индекс фамилии человека, досье которого надо удалить: ");
            int deleteNumber = Convert.ToInt32(Console.ReadLine()) - 1;

            if (deleteNumber <= fullNames.Length && deleteNumber > -1)
            {
                fullNames = DecreaseArray(fullNames, deleteNumber);
                positions = DecreaseArray(positions, deleteNumber);
                Console.WriteLine($"Досье с индексом [ {deleteNumber+1} ] удалено.");
            }
            else
            {
                Console.WriteLine("Досье с таким индексом не существует!!!");
            }

            Console.WriteLine("\nДля продолжения нажмите любую клавишу...");
            Console.ReadKey();
        }
        static string[] DecreaseArray(string[] array, int deleteNumber)
        {
            string[] temporaryArray = new string[array.Length - 1];

            for (int i = 0; i < deleteNumber; i++)
            {
                temporaryArray[i] = array[i];
            }

            for (int i = deleteNumber; i < array.Length - 1; i++)
            {
                temporaryArray[i] = array[i + 1];
            }

            array = temporaryArray;
            return array;
        }
    }
}
